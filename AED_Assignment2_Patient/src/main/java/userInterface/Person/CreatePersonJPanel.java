/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Person;

import modelclass.Person;
import modelclass.PersonDirectory;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author DhiralM
 */
public class CreatePersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePersonJPanel
     */
    
    private PersonDirectory personDirectory;
    private JPanel userContainer;
    private ManagePersonJPanel mngJPanel;
    
    public CreatePersonJPanel(JPanel userContainer,PersonDirectory personDirectory) {
        initComponents();
        this.personDirectory = personDirectory;
        this.userContainer = userContainer;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblHouseAddress = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtPersonName = new javax.swing.JTextField();
        txtHouseAddress = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblCity1 = new javax.swing.JLabel();
        txtZipcode = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        radioBtnFemale = new javax.swing.JRadioButton();
        radioBtnMale = new javax.swing.JRadioButton();
        btnGoBack = new javax.swing.JButton();
        lblPersonNameError = new javax.swing.JLabel();
        lblPersonAgeError = new javax.swing.JLabel();
        lblZipcodeError = new javax.swing.JLabel();
        lblCommunityError = new javax.swing.JLabel();
        lblCityError = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        lblTitle.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add Person Details");

        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge.setText("Age:");

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name:");

        lblHouseAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHouseAddress.setText("House Address:");

        lblCommunity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunity.setText("Community:");

        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity.setText("Zip Code:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtPersonName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPersonNameActionPerformed(evt);
            }
        });
        txtPersonName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPersonNameKeyPressed(evt);
            }
        });

        txtCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCommunityKeyPressed(evt);
            }
        });

        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
        });

        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });

        lblCity1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCity1.setText("City:");

        txtZipcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtZipcodeKeyPressed(evt);
            }
        });

        lblAge1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge1.setText("Gender:");

        buttonGroup.add(radioBtnFemale);
        radioBtnFemale.setText("Male");

        buttonGroup.add(radioBtnMale);
        radioBtnMale.setText("Female");

        btnGoBack.setText("<< Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioBtnFemale)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnMale))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPersonNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPersonAgeError, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCommunityError, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblZipcodeError, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(lblCityError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(286, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPersonNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPersonAgeError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioBtnFemale)
                        .addComponent(radioBtnMale)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHouseAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCityError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblZipcodeError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblCommunityError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(183, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
     
        if (checkBlankInput()==Boolean.TRUE)
        {
            String personName= txtPersonName.getText();
            int age= Integer.parseInt(txtAge.getText());
            String houseAddress = txtHouseAddress.getText();
            String community = txtCommunity.getText();
            String city = txtCity.getText();
            int zipcode = Integer.parseInt(txtZipcode.getText());
            
            
            String charPattern = "^[a-zA-z]+";
            Pattern expPersonName = Pattern.compile(charPattern);

            String agePattern = "^[0-9]{2}+";
            Pattern expAge = Pattern.compile(agePattern);
            
            String zipcodePattern = "^[0-9]{5}+";
            Pattern expZipCode = Pattern.compile(zipcodePattern);
            
            Matcher matcherPersonName = expPersonName.matcher(txtPersonName.getText());
            if(!matcherPersonName.matches()){
                lblPersonNameError.setText("Enter a valid person name!!");
            }else{
                lblPersonNameError.setText(" ");
                Matcher matchNumber = expAge.matcher(txtAge.getText());
                if(!matchNumber.matches()){
                        lblPersonAgeError.setText("Enter a valid Age!!");
                }else{
                    lblPersonAgeError.setText(" ");
                    Matcher matchZipCode = expZipCode.matcher(txtZipcode.getText());
                    if(!matchZipCode.matches()){
                            lblZipcodeError.setText("Enter a valid Zipcode!!");
                    }else{
                        lblZipcodeError.setText(" ");
                        Matcher matchCity = expPersonName.matcher(txtCity.getText());
                        if(!matchCity.matches()){
                            lblCityError.setText("Enter a valid City!!");
                        }else{
                            lblCityError.setText(" ");
                            Matcher macthCommunity = expPersonName.matcher(txtCommunity.getText());
                            if(!macthCommunity.matches()){
                            lblCommunityError.setText("Enter a valid Community!!");
                            }else{
                                lblCommunityError.setText(" ");
                                Person person=personDirectory.addNewPerson();
                                person.setPersonName(personName);
                                person.setAge(age);
                                person.setHouseAddress(houseAddress);
                                person.setCommunity(community);
                                person.setCity(city);
                                person.setZipcode(zipcode);

                               if(radioBtnFemale.isSelected()){
                                    person.setGender(radioBtnFemale.getText());
                                }else {
                                    person.setGender(radioBtnMale.getText());
                                }
                                JOptionPane.showMessageDialog(this, "Person added!!", "Update",
                                        JOptionPane.INFORMATION_MESSAGE);
                                clearFields();
                                
                            }
                        }
                    }
                    
                }
                
            }
           
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please enter all values",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // TODO add your handling code here:
        
        userContainer.remove(this);
        CardLayout layout = (CardLayout) userContainer.getLayout();
        layout.previous(userContainer);
        
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void txtPersonNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPersonNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonNameActionPerformed

    private void txtPersonNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPersonNameKeyPressed
        // TODO add your handling code here:
        
        char c =evt.getKeyChar();
           
           if(Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c)){
               lblPersonNameError.setText(" ");
               txtPersonName.setEditable(true);
               
           }else {
               if(!Character.isLetter(c)){
              // txtName.setEditable(false);
                lblPersonNameError.setText("Enter a valid name");
               }
           }
    }//GEN-LAST:event_txtPersonNameKeyPressed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        // TODO add your handling code here:
        
        String serialNumber = txtAge.getText();
        int length = serialNumber.length();
        
        char c = evt.getKeyChar();
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<2){
                txtAge.setEditable(true);
                lblPersonAgeError.setText("Age should be 2 digits!!");
            }else{
                txtAge.setEditable(false);
                lblPersonAgeError.setText(" ");
            }
        }else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtAge.setEditable(true);
               
            }else{
                txtAge.setEditable(false);  
            }
        }
    }//GEN-LAST:event_txtAgeKeyPressed

    private void txtZipcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipcodeKeyPressed
        // TODO add your handling code here:
        
        String serialNumber = txtZipcode.getText();
        int length = serialNumber.length();
        
        char c = evt.getKeyChar();
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<5){
                txtZipcode.setEditable(true);
                lblZipcodeError.setText("Zipcode Number should be 5 digits!!");
            }else{
                txtZipcode.setEditable(false);
                lblZipcodeError.setText(" ");
            }
        }else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtZipcode.setEditable(true);
               
            }else{
                txtZipcode.setEditable(false);  
            }
        }
    }//GEN-LAST:event_txtZipcodeKeyPressed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        // TODO add your handling code here:
        char c =evt.getKeyChar();
           
           if(Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c)){
               lblCityError.setText(" ");
               txtCity.setEditable(true);
               
           }else {
               if(!Character.isLetter(c)){
              // txtName.setEditable(false);
                lblCityError.setText("Enter a valid City");
               }
           }
        
    }//GEN-LAST:event_txtCityKeyPressed

    private void txtCommunityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommunityKeyPressed
        // TODO add your handling code here:
            
           char c =evt.getKeyChar();
           
           if(Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c)){
               lblCommunityError.setText(" ");
               txtCommunity.setEditable(true);
               
           }else {
               if(!Character.isLetter(c)){
              // txtName.setEditable(false);
                lblCommunityError.setText("Enter a valid Community");
               }
           }
    }//GEN-LAST:event_txtCommunityKeyPressed

    
    private void clearFields()
    {
        txtPersonName.setText("");
        txtAge.setText("");
        buttonGroup.clearSelection();
        txtHouseAddress.setText("");
        txtCommunity.setText("");
        txtCity.setText("");
        txtZipcode.setText("");
    }
    
    private Boolean checkBlankInput()
    {
        if(txtPersonName.getText().isEmpty() || txtAge.getText().isEmpty() || txtHouseAddress.getText().isEmpty() || txtCommunity.getText().isEmpty() || txtCity.getText().isEmpty() 
                || txtZipcode.getText().isEmpty())
        {
            return false;
        }
        else{
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity1;
    private javax.swing.JLabel lblCityError;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunityError;
    private javax.swing.JLabel lblHouseAddress;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPersonAgeError;
    private javax.swing.JLabel lblPersonNameError;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblZipcodeError;
    private javax.swing.JRadioButton radioBtnFemale;
    private javax.swing.JRadioButton radioBtnMale;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtHouseAddress;
    private javax.swing.JTextField txtPersonName;
    private javax.swing.JTextField txtZipcode;
    // End of variables declaration//GEN-END:variables
}
