/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.HospitalManager.HospitalManager;
import Business.Role.HospitalRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shikha
 */
public class ManagerHospitalManagers extends javax.swing.JPanel {

    JPanel userProcessContainer;
    private static EcoSystem ecosystem;   
    private ArrayList<HospitalManager> managersList = new ArrayList<HospitalManager>();

    DefaultTableModel model;

    /**
     * Creates new form ManagerRestManagers
     */
    public ManagerHospitalManagers(JPanel userProcessContainer1, EcoSystem system) {
        initComponents();
        userProcessContainer = userProcessContainer1;
        ecosystem = system;
        for (int i = 0; i < system.getHospitalManagerDirectory().getHospitalManagerList().size(); i++) {
            System.out.println("length second.." + system.getHospitalManagerDirectory().getHospitalManagerList().size());
            managersList.add(system.getHospitalManagerDirectory().getHospitalManagerList().get(i));
        }
        for (int i = 0; i < ecosystem.getcreateNetwork().getNetwork().size(); i++) {
            netwrokCombo.addItem(ecosystem.getcreateNetwork().getNetwork().get(i));
        }
        model = new DefaultTableModel();
        managerListTable.setModel(model);
        model.addColumn("Name");
        model.addColumn("Address");
        model.addColumn("Phone");
        model.addColumn("Network");
        viewHospitalManagerList();
        showUpdateList();
    }

    public void viewHospitalManagerList() {
        if (managersList.size() > 0) {
            for (int i = 0; i < managersList.size(); i++) {
                model.addRow(new Object[]{
                    managersList.get(i).getName(),
                    managersList.get(i).getAddress(),                    
                    managersList.get(i).getPhone(),
                    managersList.get(i).getNetwork()
                });
            }
        }
    }

    public void showUpdateList() {
        for (int i = 0; i < managersList.size(); i++) {
            managerListCombo.addItem(managersList.get(i).getName());
        }
    }
    
    public void reset() {
        managerListCombo.setSelectedIndex(0);
        updateRestManagerText.setText("");
        updateUsernameText.setText("");
        updateRestPwdText.setText("");
        updatePhoneText.setText("");
        updateAddressText.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        updateRestManagerLabel = new javax.swing.JLabel();
        restManagerText = new javax.swing.JTextField();
        restPwdLabel1 = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        restPwdText = new javax.swing.JPasswordField();
        updateUsernameText = new javax.swing.JTextField();
        updateRestManagerText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        updateRestManagerLabel1 = new javax.swing.JLabel();
        updateRestPwdText = new javax.swing.JPasswordField();
        selectManagerLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        managerListCombo = new javax.swing.JComboBox<>();
        restPwdLabel2 = new javax.swing.JLabel();
        addManagerButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteManagerButton = new javax.swing.JButton();
        phoneLabel = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        AddressText = new javax.swing.JTextField();
        phoneLabel1 = new javax.swing.JLabel();
        updatePhoneText = new javax.swing.JTextField();
        addressLabel1 = new javax.swing.JLabel();
        updateAddressText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        managerListTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        selectManagerLabel3 = new javax.swing.JLabel();
        netwrokCombo = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(0, 204, 204));
        setForeground(new java.awt.Color(72, 72, 72));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add Doctor");

        updateRestManagerLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        updateRestManagerLabel.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel.setText("Name");

        restManagerText.setForeground(new java.awt.Color(72, 72, 72));
        restManagerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restManagerTextActionPerformed(evt);
            }
        });

        restPwdLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        restPwdLabel1.setForeground(new java.awt.Color(72, 72, 72));
        restPwdLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restPwdLabel1.setText("Username");

        usernameText.setForeground(new java.awt.Color(72, 72, 72));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(72, 72, 72));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Password");

        restPwdText.setForeground(new java.awt.Color(72, 72, 72));

        updateUsernameText.setForeground(new java.awt.Color(72, 72, 72));

        updateRestManagerText.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestManagerTextActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(72, 72, 72));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Password");

        updateRestManagerLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        updateRestManagerLabel1.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel1.setText("Name");

        updateRestPwdText.setForeground(new java.awt.Color(72, 72, 72));
        updateRestPwdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRestPwdTextActionPerformed(evt);
            }
        });

        selectManagerLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        selectManagerLabel1.setForeground(new java.awt.Color(72, 72, 72));
        selectManagerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel1.setText("Select Name");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Update or Delete Doctor");

        managerListCombo.setForeground(new java.awt.Color(72, 72, 72));
        managerListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        managerListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerListComboActionPerformed(evt);
            }
        });

        restPwdLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        restPwdLabel2.setForeground(new java.awt.Color(72, 72, 72));
        restPwdLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restPwdLabel2.setText("Username");

        addManagerButton.setBackground(new java.awt.Color(204, 255, 0));
        addManagerButton.setText("Add");
        addManagerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addManagerButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(204, 255, 0));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteManagerButton.setBackground(new java.awt.Color(204, 255, 0));
        deleteManagerButton.setText("Delete");
        deleteManagerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteManagerButtonActionPerformed(evt);
            }
        });

        phoneLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        phoneLabel.setForeground(new java.awt.Color(72, 72, 72));
        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        phoneLabel.setText("Phone");

        phoneText.setForeground(new java.awt.Color(72, 72, 72));

        addressLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(72, 72, 72));
        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addressLabel.setText("Address");

        AddressText.setForeground(new java.awt.Color(72, 72, 72));

        phoneLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        phoneLabel1.setForeground(new java.awt.Color(72, 72, 72));
        phoneLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        phoneLabel1.setText("Phone");

        updatePhoneText.setForeground(new java.awt.Color(72, 72, 72));

        addressLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addressLabel1.setForeground(new java.awt.Color(72, 72, 72));
        addressLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addressLabel1.setText("Address");

        updateAddressText.setForeground(new java.awt.Color(72, 72, 72));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("View Doctor");

        managerListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Address", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(managerListTable);

        btnBack.setBackground(new java.awt.Color(204, 255, 0));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(255, 51, 0));
        title.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("\" AtYourService \"");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/preview_10029317.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        selectManagerLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        selectManagerLabel3.setForeground(new java.awt.Color(72, 72, 72));
        selectManagerLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel3.setText("Select Network");

        netwrokCombo.setForeground(new java.awt.Color(72, 72, 72));
        netwrokCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        netwrokCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netwrokComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(updateRestManagerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(restPwdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(restManagerText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(restPwdText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(92, 92, 92))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(selectManagerLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(netwrokCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(88, 88, 88))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(addManagerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(selectManagerLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateRestManagerLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(restPwdLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(managerListCombo, 0, 153, Short.MAX_VALUE)
                                            .addComponent(updateRestManagerText)
                                            .addComponent(updateUsernameText)
                                            .addComponent(updateRestPwdText)
                                            .addComponent(updatePhoneText)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(updateAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(deleteManagerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(278, 278, 278)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addManagerButton, btnBack, deleteManagerButton, updateButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(title))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(restManagerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateRestManagerLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectManagerLabel1)
                        .addComponent(managerListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(restPwdLabel1)
                        .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateRestManagerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateRestManagerLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(restPwdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(updateUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(restPwdLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addressLabel)
                                    .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(netwrokCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectManagerLabel3)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updateRestPwdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(phoneLabel1)
                                    .addComponent(updatePhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addressLabel1)
                                    .addComponent(updateAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteManagerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addManagerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(477, 477, 477))))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
//        Boolean isValid = validateFields(updateUsernameText.getText(), updateAddressText.getText(), updatePhoneText.getText(), updateRestManagerText.getText(), updateRestPwdText.getPassword());
        if(managerListCombo.getSelectedItem() == null || managerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(updateUsernameText.getText(), updateAddressText.getText(), updatePhoneText.getText(), updateRestManagerText.getText(), updateRestPwdText.getPassword(),"no")) {
            return;
        }
        if (managerListCombo.getSelectedItem() != null) {
            String selectedItem = (String) managerListCombo.getSelectedItem();
            for (int i = 0; i < managersList.size(); i++) {
                char[] ch = updateRestPwdText.getPassword();
                String pwd = new String(ch);
                if (managersList.get(i).getName().equalsIgnoreCase(selectedItem)) {
                    managersList.get(i).setAddress(updateAddressText.getText());
                    managersList.get(i).setPhone(updatePhoneText.getText());
                    managersList.get(i).getAccountDetails().setPassword(pwd);                    
                    managersList.get(i).getAccountDetails().setUsername(updateUsernameText.getText());
                    managersList.get(i).setName(updateRestManagerText.getText());
                    JOptionPane.showMessageDialog(this, "Doctor updated successfully");
                }
            }
        }
        String selectedItem = (String) managerListCombo.getSelectedItem();
        managerListCombo.getSelectedIndex();
        for (int i = 0; i < managerListTable.getRowCount(); i++) {
            if (((String) managerListTable.getValueAt(i, 0)).equals(selectedItem)) {
                managerListCombo.addItem(updateRestManagerText.getText());
                model.addRow(new Object[]{
                    updateRestManagerText.getText(),
                    updateAddressText.getText(),
                    updatePhoneText.getText(),
                    managersList.get(i).getNetwork()
                    
                });
                model.removeRow(i);
                managerListCombo.removeItemAt(i + 1);

            }//end of if block
        }
        reset();
    }//GEN-LAST:event_updateButtonActionPerformed
    
    private void deleteManagerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteManagerButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = false;

        String selectedItem = (String) managerListCombo.getSelectedItem();
        managerListCombo.getSelectedIndex();
        if(managerListCombo.getSelectedItem() == null || managerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(updateUsernameText.getText(), updateAddressText.getText(), updatePhoneText.getText(), updateRestManagerText.getText(), updateRestPwdText.getPassword(), "no")) {
            return;
        }
        if (flag == false) {
             Boolean isDelete = ecosystem.getUserAccountDirectory().deleteUser(selectedItem);
             ecosystem.getHospitalManagerDirectory().deleteHospitalManager(selectedItem);
//            Boolean isDelete = ecosystem.getHospitalManagerDirectory().deleteHospitalManager(selectedItem, ecosystem);            
            for (int i = 0; i < managerListTable.getRowCount(); i++) {
                if (((String) managerListTable.getValueAt(i, 0)).equals(selectedItem)) {
                    model.removeRow(i);
                    managerListCombo.removeItemAt(i + 1);
                    updateRestManagerText.setText("");
                    updateUsernameText.setText("");
                    updateRestPwdText.setText("");
                    updatePhoneText.setText("");
                    updateAddressText.setText("");
                }//end of if block
            }
            if (isDelete) {
                JOptionPane.showMessageDialog(this, "Doctor deleted successfully");
            }
        }
        reset();
    }//GEN-LAST:event_deleteManagerButtonActionPerformed
    public Boolean validateFields(String username, String address, String phone, String name, char[] pwd, String netwrok) {
        String passregex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$";
        Pattern pattern = Pattern.compile(passregex);
        Matcher matcher = pattern.matcher(String.valueOf(pwd));
        if(username.isEmpty() || phone.isEmpty() || name.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (pwd.length < 8) {
            JOptionPane.showMessageDialog(null,"Password cannot be less than 8","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if(phone.length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!phone.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!matcher.matches()){
            JOptionPane.showMessageDialog(null, "Enter valid password with atleast on number, one lowercase letter, one uppercase letter,one special char and atleast 8 digits");
            return false;
        }
        else if(netwrok == "None"){
            JOptionPane.showMessageDialog(null, "Network cannot be None");
            return false;
        }
        return true;
    }
    
    private void addManagerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addManagerButtonActionPerformed
        // TODO add your handling code here:
        Boolean isValid = validateFields(usernameText.getText(), AddressText.getText(), phoneText.getText(), restManagerText.getText(), restPwdText.getPassword(),(String) netwrokCombo.getSelectedItem());
        if (!isValid) {
            return;
        }
        for (int i = 0; i < ecosystem.getUserAccountDirectory().getUserAccountList().size(); i++) {
            if("hospitalAdmin".equals(ecosystem.getUserAccountDirectory().getUserAccountList().get(i).getRoleName()) && ecosystem.getUserAccountDirectory().getUserAccountList().get(i).getUsername().equals(usernameText.getText())){
                JOptionPane.showMessageDialog(null,"Username Already Present", "Error message" ,JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        char[] ch = restPwdText.getPassword();
        String pwd = new String(ch);
        String netwrokname = (String) netwrokCombo.getSelectedItem();
        Employee employee = ecosystem.getEmployeeDirectory().createEmployee(restManagerText.getText());
        UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(usernameText.getText(), pwd, employee, new HospitalRole(), "hospitalAdmin");
        HospitalManager rest = ecosystem.getHospitalManagerDirectory().createHospitalManager(restManagerText.getText(), ua, phoneText.getText(), AddressText.getText(),netwrokname);
        managersList.add(rest);
        JOptionPane.showMessageDialog(this, "Doctor added successfully");
        managerListCombo.addItem(restManagerText.getText());
        model.addRow(new Object[]{
            restManagerText.getText(),
            AddressText.getText(),
            phoneText.getText(),
            netwrokname
        });
        restManagerText.setText("");
        usernameText.setText("");
        restPwdText.setText("");
        phoneText.setText("");
        AddressText.setText("");
    }//GEN-LAST:event_addManagerButtonActionPerformed

    private void updateRestManagerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestManagerTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateRestManagerTextActionPerformed

    private void updateRestPwdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRestPwdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateRestPwdTextActionPerformed

    private void restManagerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restManagerTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restManagerTextActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        SystemAdminWorkAreaJPanel dm= new SystemAdminWorkAreaJPanel(userProcessContainer, ecosystem);
        userProcessContainer.add("manageNetworkJPanel",dm);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void managerListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managerListComboActionPerformed
        // TODO add your handling code here:
        if (managerListCombo.getSelectedItem() != "None") {
            String selectedItem = (String) managerListCombo.getSelectedItem();
            for (int i = 0; i < managersList.size(); i++) {
                char[] ch = updateRestPwdText.getPassword();
                String pwd = new String(ch);
                if (managersList.get(i).getName().equalsIgnoreCase(selectedItem)) {
                    updateUsernameText.setText(managersList.get(i).getAccountDetails().getUsername());
                    updateRestPwdText.setText(managersList.get(i).getAccountDetails().getPassword());
                    updatePhoneText.setText(managersList.get(i).getPhone());
                    updateRestManagerText.setText(managersList.get(i).getName());
                    updateAddressText.setText(managersList.get(i).getAddress());
                    break;
                }
            }
        }else{
            updateUsernameText.setText("");
            updateRestPwdText.setText("");
            updatePhoneText.setText("");
            updateRestManagerText.setText("");
            updateAddressText.setText("");
        }
    }//GEN-LAST:event_managerListComboActionPerformed

    private void netwrokComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netwrokComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_netwrokComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressText;
    private javax.swing.JButton addManagerButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel addressLabel1;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton deleteManagerButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> managerListCombo;
    private javax.swing.JTable managerListTable;
    private javax.swing.JComboBox<String> netwrokCombo;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel phoneLabel1;
    private javax.swing.JTextField phoneText;
    private javax.swing.JTextField restManagerText;
    private javax.swing.JLabel restPwdLabel1;
    private javax.swing.JLabel restPwdLabel2;
    private javax.swing.JPasswordField restPwdText;
    private javax.swing.JLabel selectManagerLabel1;
    private javax.swing.JLabel selectManagerLabel3;
    private javax.swing.JLabel title;
    private javax.swing.JTextField updateAddressText;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField updatePhoneText;
    private javax.swing.JLabel updateRestManagerLabel;
    private javax.swing.JLabel updateRestManagerLabel1;
    private javax.swing.JTextField updateRestManagerText;
    private javax.swing.JPasswordField updateRestPwdText;
    private javax.swing.JTextField updateUsernameText;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables
}
