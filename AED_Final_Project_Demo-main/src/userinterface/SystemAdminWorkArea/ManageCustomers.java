/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Role.CustomerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DhiralM
 */
public class ManageCustomers extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    private static EcoSystem ecosystem;
    private ArrayList<Customer> customerList = new ArrayList<Customer>();
    DefaultTableModel model;

    /**
     * Creates new form ManageCustomers
     */
    public ManageCustomers(JPanel userProcessContainer1, EcoSystem system) {
        initComponents();
        userProcessContainer = userProcessContainer1;
        ecosystem = system;
        for (int i = 0; i < system.getCustomerDirectory().getCustomerList().size(); i++) {
            customerList.add(system.getCustomerDirectory().getCustomerList().get(i));
        }
        for (int i = 0; i < ecosystem.getcreateNetwork().getNetwork().size(); i++) {
            customerListCombo1.addItem(ecosystem.getcreateNetwork().getNetwork().get(i));
        }
        model = new DefaultTableModel();
        customerListTable.setModel(model);
        model.addColumn("Name");
        model.addColumn("Address");
        model.addColumn("Phone");
        model.addColumn("Email");
        model.addColumn("Network");
        viewCustomerList();
        showUpdateList();
    }
    
    public void viewCustomerList() {
        if (customerList.size() > 0) {
            for (int i = 0; i < customerList.size(); i++) {
                model.addRow(new Object[]{
                    customerList.get(i).getName(),
                    customerList.get(i).getAddress(),
                    customerList.get(i).getPhone(),
                    customerList.get(i).getEmail(),
                    customerList.get(i).getNetwork()
                });
            }
        }
    }
    
    public void showUpdateList() {
        for (int i = 0; i < customerList.size(); i++) {
            customerListCombo.addItem(customerList.get(i).getName());
        }
    }
    
    public void reset() {
        customerListCombo.setSelectedIndex(0);
        updateNameText.setText("");
        updateUsernameText.setText("");
        updatePwdText.setText("");
        updatePhoneText.setText("");
        updateAddressText.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        updateRestManagerLabel = new javax.swing.JLabel();
        restPwdLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        AddressText = new javax.swing.JTextField();
        phoneText = new javax.swing.JTextField();
        restPwdText = new javax.swing.JPasswordField();
        usernameText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        viewLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerListTable = new javax.swing.JTable();
        AddBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        selectManagerLabel1 = new javax.swing.JLabel();
        customerListCombo = new javax.swing.JComboBox<>();
        updateNameText = new javax.swing.JTextField();
        updateUsernameText = new javax.swing.JTextField();
        restPwdLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        updatePwdText = new javax.swing.JPasswordField();
        updatePhoneText = new javax.swing.JTextField();
        phoneLabel1 = new javax.swing.JLabel();
        addressLabel1 = new javax.swing.JLabel();
        updateAddressText = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        selectManagerLabel2 = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        EmailTxt = new javax.swing.JTextField();
        addressLabel2 = new javax.swing.JLabel();
        updateEmailTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        selectManagerLabel3 = new javax.swing.JLabel();
        customerListCombo1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(240, 248, 255));
        setForeground(new java.awt.Color(72, 72, 72));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 83, 170));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add a Customer");

        updateRestManagerLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        updateRestManagerLabel.setForeground(new java.awt.Color(72, 72, 72));
        updateRestManagerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        updateRestManagerLabel.setText("Name");

        restPwdLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        restPwdLabel1.setForeground(new java.awt.Color(72, 72, 72));
        restPwdLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restPwdLabel1.setText("Username");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(72, 72, 72));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Password");

        phoneLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        phoneLabel.setForeground(new java.awt.Color(72, 72, 72));
        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        phoneLabel.setText("Phone");

        addressLabel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(72, 72, 72));
        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addressLabel.setText("Address");

        AddressText.setForeground(new java.awt.Color(72, 72, 72));

        phoneText.setForeground(new java.awt.Color(72, 72, 72));

        restPwdText.setForeground(new java.awt.Color(72, 72, 72));

        usernameText.setForeground(new java.awt.Color(72, 72, 72));

        nameText.setForeground(new java.awt.Color(72, 72, 72));
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        viewLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        viewLabel.setForeground(new java.awt.Color(0, 83, 170));
        viewLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viewLabel.setText("View Customers");

        customerListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerListTable.setToolTipText("");
        jScrollPane1.setViewportView(customerListTable);

        AddBtn.setBackground(new java.awt.Color(0, 83, 170));
        AddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 83, 170));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Update / Delete a Customer");

        selectManagerLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        selectManagerLabel1.setForeground(new java.awt.Color(72, 72, 72));
        selectManagerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel1.setText("Select Customer");

        customerListCombo.setForeground(new java.awt.Color(72, 72, 72));
        customerListCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        customerListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerListComboActionPerformed(evt);
            }
        });

        updateNameText.setForeground(new java.awt.Color(72, 72, 72));
        updateNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNameTextActionPerformed(evt);
            }
        });

        updateUsernameText.setForeground(new java.awt.Color(72, 72, 72));
        updateUsernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUsernameTextActionPerformed(evt);
            }
        });

        restPwdLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        restPwdLabel2.setForeground(new java.awt.Color(72, 72, 72));
        restPwdLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        restPwdLabel2.setText("Username");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(72, 72, 72));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Password");

        updatePwdText.setForeground(new java.awt.Color(72, 72, 72));
        updatePwdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePwdTextActionPerformed(evt);
            }
        });

        updatePhoneText.setForeground(new java.awt.Color(72, 72, 72));

        phoneLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        phoneLabel1.setForeground(new java.awt.Color(72, 72, 72));
        phoneLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        phoneLabel1.setText("Phone");

        addressLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addressLabel1.setForeground(new java.awt.Color(72, 72, 72));
        addressLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addressLabel1.setText("Address");

        updateAddressText.setForeground(new java.awt.Color(72, 72, 72));

        deleteButton.setBackground(new java.awt.Color(0, 83, 170));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(0, 83, 170));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(0, 83, 170));
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(255, 51, 0));
        title.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 83, 170));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Welcome to Help Seeker");

        selectManagerLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        selectManagerLabel2.setForeground(new java.awt.Color(72, 72, 72));
        selectManagerLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel2.setText("Name");

        Email.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Email.setForeground(new java.awt.Color(72, 72, 72));
        Email.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        Email.setText("Email");

        EmailTxt.setForeground(new java.awt.Color(72, 72, 72));

        addressLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addressLabel2.setForeground(new java.awt.Color(72, 72, 72));
        addressLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        addressLabel2.setText("Email");

        updateEmailTxt.setForeground(new java.awt.Color(72, 72, 72));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/shopping-minions.gif"))); // NOI18N

        selectManagerLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        selectManagerLabel3.setForeground(new java.awt.Color(72, 72, 72));
        selectManagerLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        selectManagerLabel3.setText("Network");

        customerListCombo1.setForeground(new java.awt.Color(72, 72, 72));
        customerListCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        customerListCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerListCombo1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(updateRestManagerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(restPwdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(selectManagerLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerListCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(restPwdText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(124, 124, 124)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(selectManagerLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                                .addComponent(selectManagerLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(restPwdLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7)
                                                .addComponent(phoneLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(addressLabel1))
                                            .addComponent(addressLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(updateNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(updateUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(updatePwdText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(updatePhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(updateAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(updateEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(customerListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(38, 38, 38)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(457, 457, 457)
                .addComponent(viewLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AddBtn, btnBack, deleteButton, updateButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectManagerLabel1)
                            .addComponent(updateRestManagerLabel)
                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restPwdLabel1)
                            .addComponent(updateNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectManagerLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(restPwdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(restPwdLabel2))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneLabel))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(updatePwdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(phoneLabel1)
                                    .addComponent(updatePhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(updateAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(updateEmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(addressLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deleteButton))
                                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(EmailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Email))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(customerListCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectManagerLabel3)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(viewLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBack, deleteButton, updateButton});

    }// </editor-fold>//GEN-END:initComponents

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed
    
    public Boolean validateFields(String username, String address, String phone, String name, char[] pwd, String email, String netwrok) {
        String passregex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$";
        Pattern pattern = Pattern.compile(passregex);
        Matcher matcher = pattern.matcher(String.valueOf(pwd));
        if(username.isEmpty() || phone.isEmpty() || name.isEmpty() || address.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (pwd.length < 8) {
            JOptionPane.showMessageDialog(null,"Password cannot be less than 8","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        } else if(phone.length() != 10) {
            JOptionPane.showMessageDialog(null, "PhoneNumber must be of 10 digits","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!phone.matches("^[0-9]+$")) {
            JOptionPane.showMessageDialog(null, "Phone Number must have digits only","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!email.matches("[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?")){
             JOptionPane.showMessageDialog(null, "Email is invalid","Error message", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if(!matcher.matches()){
            JOptionPane.showMessageDialog(null, "Enter valid password with atleast on number, one lowercase letter, one uppercase letter,one special char and atleast 8 digits");
            return false;
        }
        else if(netwrok == "None"){
            JOptionPane.showMessageDialog(null, "Netwrok cannot be None");
            return false;
        }
        
        return true;
    }
    
    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
        Boolean isValid = validateFields(usernameText.getText(), AddressText.getText(), phoneText.getText(), nameText.getText(), restPwdText.getPassword(), EmailTxt.getText(),(String) customerListCombo1.getSelectedItem());
        if (!isValid) {
            return;
        }
        for (int i = 0; i < customerList.size(); i++) {
            if("customerAdmin".equals(customerList.get(i).getAccountDetails().getRoleName()) && customerList.get(i).getAccountDetails().getUsername().equals(usernameText.getText())){
                JOptionPane.showMessageDialog(null,"Username Already Present", "Error message" ,JOptionPane.ERROR_MESSAGE);
            return;
            }
        }
        char[] ch = restPwdText.getPassword();
        String pwd = new String(ch);
        String name = (String) customerListCombo1.getSelectedItem();
        Employee employee = ecosystem.getEmployeeDirectory().createEmployee(nameText.getText());
        UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(usernameText.getText(), pwd, employee, new CustomerRole(), "customerAdmin");
        Customer cust = ecosystem.getCustomerDirectory().createCustomer(nameText.getText(), ua, phoneText.getText(), AddressText.getText(), EmailTxt.getText(), name);
        customerList.add(cust);
        JOptionPane.showMessageDialog(this, "Customer added successfully");
        System.out.println("Customer Added ...");
        customerListCombo.addItem(nameText.getText());
        model.addRow(new Object[]{
            nameText.getText(),
            AddressText.getText(),
            phoneText.getText(),
            EmailTxt.getText(),
            name
        });
        nameText.setText("");
        usernameText.setText("");
        restPwdText.setText("");
        phoneText.setText("");
        AddressText.setText("");
        EmailTxt.setText("");
    }//GEN-LAST:event_AddBtnActionPerformed

    private void customerListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerListComboActionPerformed
        // TODO add your handling code here:
        if (customerListCombo.getSelectedItem() != "None") {
            String selectedItem = (String) customerListCombo.getSelectedItem();
            for (int i = 0; i < customerList.size(); i++) {
                char[] ch = updatePwdText.getPassword();
                String pwd = new String(ch);
                if (customerList.get(i).getName().equalsIgnoreCase(selectedItem)) {
                    updateUsernameText.setText(customerList.get(i).getAccountDetails().getUsername());
                    updatePwdText.setText(customerList.get(i).getAccountDetails().getPassword());
                    updatePhoneText.setText(customerList.get(i).getPhone());
                    updateNameText.setText(customerList.get(i).getName());
                    updateAddressText.setText(customerList.get(i).getAddress());
                    updateEmailTxt.setText(customerList.get(i).getEmail());
                    
                }
            }
        }else{
            updateUsernameText.setText("");
            updatePwdText.setText("");
            updatePhoneText.setText("");
            updateNameText.setText("");
            updateAddressText.setText("");
            updateEmailTxt.setText("");
        }
    }//GEN-LAST:event_customerListComboActionPerformed

    private void updateNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateNameTextActionPerformed

    private void updatePwdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePwdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePwdTextActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = false;
        
        String selectedItem = (String) customerListCombo.getSelectedItem();
        customerListCombo.getSelectedIndex();
        if(customerListCombo.getSelectedItem() == null || customerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(updateUsernameText.getText(), updateAddressText.getText(), updatePhoneText.getText(), updateNameText.getText(), updatePwdText.getPassword(), updateEmailTxt.getText(), "no")) {
            return;
        }
        if (flag == false) {
            Boolean isDeleteUser = ecosystem.getUserAccountDirectory().deleteUser(selectedItem);
            ecosystem.getCustomerDirectory().deleteCustomer(selectedItem);
            
            for (int i = 0; i < customerListTable.getRowCount(); i++) {
                if (((String) customerListTable.getValueAt(i, 0)).equals(selectedItem)) {
                    model.removeRow(i);
                    customerListCombo.removeItemAt(i + 1);
                    updateNameText.setText("");
                    updateUsernameText.setText("");
                    updatePwdText.setText("");
                    updatePhoneText.setText("");
                    updateAddressText.setText("");
                    updateEmailTxt.setText("");
                }//end of if block
            }
            if (isDeleteUser) {
                System.out.println("Customer Deleted ...");
                JOptionPane.showMessageDialog(this, "Customer deleted successfully");
            }
        }
        reset();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if(customerListCombo.getSelectedItem() == null || customerListCombo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null,"Select a value from dropdown","Error message", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!validateFields(updateUsernameText.getText(), updateAddressText.getText(), updatePhoneText.getText(), updateNameText.getText(), updatePwdText.getPassword(), updateEmailTxt.getText(), "no")) {
            return;
        }
        String networks = "";
        if (customerListCombo.getSelectedItem() != null) {
            String selectedItem = (String) customerListCombo.getSelectedItem();
            for (int i = 0; i < customerList.size(); i++) {
                char[] ch = updatePwdText.getPassword();
                String pwd = new String(ch);
                if (customerList.get(i).getName().equalsIgnoreCase(selectedItem)) {
                    customerList.get(i).setAddress(updateAddressText.getText());
                    customerList.get(i).setPhone(updatePhoneText.getText());
                    customerList.get(i).getAccountDetails().setPassword(pwd);
                    customerList.get(i).setName(updateNameText.getText());
                    customerList.get(i).getAccountDetails().setUsername(updateUsernameText.getText());
                    customerList.get(i).setEmail(updateEmailTxt.getText());
                    System.out.println("Customer Updated ...");
                    networks = customerList.get(i).getNetwork();
                    JOptionPane.showMessageDialog(this, "Customer updated successfully");
                }
            }
        }
        String selectedItem = (String) customerListCombo.getSelectedItem();
        customerListCombo.getSelectedIndex();
        for (int i = 0; i < customerListTable.getRowCount(); i++) {
            if (((String) customerListTable.getValueAt(i, 0)).equals(selectedItem)) {
                customerListCombo.addItem(updateNameText.getText());
                model.addRow(new Object[]{
                    updateNameText.getText(),
                    updateAddressText.getText(),
                    updatePhoneText.getText(),
                    updateEmailTxt.getText(),
                    networks
                });
                model.removeRow(i);
                customerListCombo.removeItemAt(i + 1);
                
            }//end of if block
        }
        reset();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        SystemAdminWorkAreaJPanel dm= new SystemAdminWorkAreaJPanel(userProcessContainer, ecosystem);
        userProcessContainer.add("manageNetworkJPanel",dm);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void updateUsernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUsernameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateUsernameTextActionPerformed

    private void customerListCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerListCombo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerListCombo1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JTextField AddressText;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField EmailTxt;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel addressLabel1;
    private javax.swing.JLabel addressLabel2;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> customerListCombo;
    private javax.swing.JComboBox<String> customerListCombo1;
    private javax.swing.JTable customerListTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel phoneLabel1;
    private javax.swing.JTextField phoneText;
    private javax.swing.JLabel restPwdLabel1;
    private javax.swing.JLabel restPwdLabel2;
    private javax.swing.JPasswordField restPwdText;
    private javax.swing.JLabel selectManagerLabel1;
    private javax.swing.JLabel selectManagerLabel2;
    private javax.swing.JLabel selectManagerLabel3;
    private javax.swing.JLabel title;
    private javax.swing.JTextField updateAddressText;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField updateEmailTxt;
    private javax.swing.JTextField updateNameText;
    private javax.swing.JTextField updatePhoneText;
    private javax.swing.JPasswordField updatePwdText;
    private javax.swing.JLabel updateRestManagerLabel;
    private javax.swing.JTextField updateUsernameText;
    private javax.swing.JTextField usernameText;
    private javax.swing.JLabel viewLabel;
    // End of variables declaration//GEN-END:variables
}
