/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HotelAdminRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Hotel.Hotel;
import Business.Orders.HotelOrder;
import Business.Orders.HotelDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DhiralM
 */
public class ManageOrdersPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem ecosystem;
    Hotel grocery;
    DefaultTableModel model;
    DefaultTableModel ordersModel;
    private HotelDirectory selectedDirs;
    UserAccount ua;

    /**
     * Creates new form ManageOrders
     */
    public ManageOrdersPanel(JPanel userProcessContainer, EcoSystem system, Hotel groc, UserAccount ua) {
        initComponents();
        assignLabel.setVisible(false);
        assignCombo.setVisible(false);
        finishBtn.setVisible(false);
        ecosystem = system;
        this.ua = ua;
        
        model = new DefaultTableModel();
        ordersModel = new DefaultTableModel();
        
        orderTable.setModel(model);
        orderListTable.setModel(ordersModel);
        
        model.addColumn("Item");
        model.addColumn("Price");
        model.addColumn("Quantity");
        model.addColumn("Customer");
        model.addColumn("Date");
        ordersModel.addColumn("Id");
        ordersModel.addColumn("Status");
        ordersModel.addColumn("name");        
        ordersModel.addColumn("comment");
        ordersModel.addColumn("FeedBack");
        
       

        this.userProcessContainer = userProcessContainer;
        grocery = groc;
        
        viewOrderDirList();
        showUpdateList();
    }


        public void showUpdateList() {
        assignCombo.removeAllItems();
        for (int i = 0; i < ecosystem.getDeliveryManDirectory().getDeliverymanList().size(); i++) {
            if(ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).isAvailable())
            {

                
            assignCombo.addItem(ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).getName());
            System.out.println("Size of assign combo" + assignCombo.getItemCount());

            }
        }
    }

    public void viewOrderDirList() {
        String name = "";
        for (int i = ordersModel.getRowCount() - 1; i >= 0; i--) {
            ordersModel.removeRow(i);
        }
        for (int i = 0; i < grocery.getOrderDirectoryList().size(); i++) {
            for (int j = 0; j < grocery.getOrderDirectoryList().get(i).getOrderList().size(); j++) {
                   name = grocery.getOrderDirectoryList().get(i).getCustomerDetails().getUsername();
            }
            ordersModel.addRow(new Object[]{
                grocery.getOrderDirectoryList().get(i).getId(),
                grocery.getOrderDirectoryList().get(i).getStatus(),
                name,
                grocery.getOrderDirectoryList().get(i).getComment(),
                grocery.getOrderDirectoryList().get(i).getFeedbackComment()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        acceptBtn = new javax.swing.JButton();
        rejectBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderListTable = new javax.swing.JTable();
        assignLabel = new javax.swing.JLabel();
        assignCombo = new javax.swing.JComboBox<>();
        finishBtn = new javax.swing.JButton();
        Backbutton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Orders");

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderTable.setGridColor(new java.awt.Color(0, 0, 0));
        orderTable.setRowHeight(25);
        jScrollPane1.setViewportView(orderTable);

        acceptBtn.setBackground(new java.awt.Color(0, 83, 170));
        acceptBtn.setForeground(new java.awt.Color(255, 255, 255));
        acceptBtn.setText("Accept");
        acceptBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        acceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBtnActionPerformed(evt);
            }
        });

        rejectBtn.setBackground(new java.awt.Color(0, 83, 170));
        rejectBtn.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        rejectBtn.setForeground(new java.awt.Color(255, 255, 255));
        rejectBtn.setText("Reject");
        rejectBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        rejectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("View Selected Order");

        orderListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderListTable.setGridColor(new java.awt.Color(0, 0, 0));
        orderListTable.setRowHeight(25);
        orderListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderListTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(orderListTable);

        assignLabel.setForeground(new java.awt.Color(72, 72, 72));
        assignLabel.setText("Assign Delivery Man");

        assignCombo.setForeground(new java.awt.Color(72, 72, 72));
        assignCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignComboActionPerformed(evt);
            }
        });

        finishBtn.setBackground(new java.awt.Color(0, 83, 170));
        finishBtn.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        finishBtn.setForeground(new java.awt.Color(255, 255, 255));
        finishBtn.setText("Finish");
        finishBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        finishBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishBtnActionPerformed(evt);
            }
        });

        Backbutton.setBackground(new java.awt.Color(0, 83, 170));
        Backbutton.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        Backbutton.setForeground(new java.awt.Color(255, 255, 255));
        Backbutton.setText("Back");
        Backbutton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbuttonActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/depositphotos_64022847-stock-illustration-dessert-icon-set.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(acceptBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rejectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(assignLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(assignCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap(87, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(finishBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Backbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(assignLabel)
                            .addComponent(assignCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finishBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rejectBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(acceptBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, Short.MAX_VALUE)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBtnActionPerformed
                // TODO add your handling code here:
        String b = String.valueOf(ordersModel.getValueAt(orderListTable.getSelectedRow(), 1));        
        if(!b.equalsIgnoreCase("Placed")) {
            JOptionPane.showMessageDialog(this, "Order already " +b+ ". Please selected other order");
            return;
        }  
        if (selectedDirs != null) {
                
            if(assignCombo.getItemCount() > 0){
            
            assignLabel.setVisible(true);
            assignCombo.setVisible(true);
            finishBtn.setVisible(true);
            }else{JOptionPane.showMessageDialog(this, "Hey Sorry, We don't have a Delivery Person Available righnow!");}

        } else {
            JOptionPane.showMessageDialog(this, "Select a order first");
        }// TODO add your handling code here:
    }//GEN-LAST:event_acceptBtnActionPerformed

    public Customer findCustomer() {
        assignCombo.removeAllItems();
        for (int i = 0; i < ecosystem.getCustomerDirectory().getCustomerList().size(); i++) {
            if (ecosystem.getCustomerDirectory().getCustomerList().get(i).getAccountDetails().getUsername().equals(selectedDirs.getCustomerDetails().getUsername())) {
                return ecosystem.getCustomerDirectory().getCustomerList().get(i);
            }
        }
        return null;
    }
    
    public void setCustomerStatus(String status) {
        Customer cust = findCustomer();
            for (int i = 0; i < cust.getOrderDirectoryList().size(); i++) {
                if (cust.getOrderDirectoryList().get(i).getId() == (selectedDirs.getId())) {
                    cust.getOrderDirectoryList().get(i).setStatus(status);
                }
            }
    }
    
    
    private void rejectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBtnActionPerformed
       if (selectedDirs != null) {
            assignLabel.setVisible(false);
            assignCombo.setVisible(false);
            finishBtn.setVisible(false);
            selectedDirs.setIsAccept(false);
            ordersModel.removeRow(orderListTable.getSelectedRow());
            selectedDirs.setStatus("Rejected");
            setCustomerStatus("Rejected");
            for (int i = 0; i < grocery.getOrderDirectoryList().size(); i++) {
                if (grocery.getOrderDirectoryList().get(i).getId() == (selectedDirs.getId())) {
                    grocery.getOrderDirectoryList().remove(i);
                    JOptionPane.showMessageDialog(this, "Order rejected");
                    break;
                }
            }
        }else {
            JOptionPane.showMessageDialog(this, "Select a order first");
        }    }//GEN-LAST:event_rejectBtnActionPerformed

    private void assignComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignComboActionPerformed

    private void finishBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishBtnActionPerformed
        // TODO add your handling code here:
        if (assignCombo.getSelectedItem() != null && selectedDirs != null) {
            String selectedItem = (String) assignCombo.getSelectedItem();
            for (int i = 0; i < ecosystem.getDeliveryManDirectory().getDeliverymanList().size(); i++) {
                if (ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).getName().equalsIgnoreCase(selectedItem)) {
                    ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).setAvailable(false);
                    selectedDirs.setDeliveryMan(ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i));
                    ecosystem.getDeliveryManDirectory().getDeliverymanList().get(i).getOrderLists().add(selectedDirs);
                    selectedDirs.setIsAccept(true);
                    selectedDirs.setStatus("Accepted");
                    setCustomerStatus("Accepted");
                    
                    JOptionPane.showMessageDialog(this, "Order accepted and added delivery man");
                    viewOrderDirList();
                    showUpdateList();
                    assignLabel.setVisible(false);
                    assignCombo.setVisible(false);
                 
                    finishBtn.setVisible(false);
                    return;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Unable to assign a delivery guy");
        }    }//GEN-LAST:event_finishBtnActionPerformed

    private void BackbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbuttonActionPerformed
        AdminWorkAreaJPanel dm= new AdminWorkAreaJPanel(userProcessContainer, ua, ecosystem);
        userProcessContainer.add("manageNetworkJPanel",dm);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);    }//GEN-LAST:event_BackbuttonActionPerformed

    private void orderListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderListTableMouseClicked
               // TODO add your handling code here:
        if(orderListTable.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        
        String a = String.valueOf(ordersModel.getValueAt(orderListTable.getSelectedRow(), 1));
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        selectedDirs = grocery.getOrderDirectoryList().get(orderListTable.getSelectedRow());
        ArrayList<HotelOrder> orderlist = grocery.getOrderDirectoryList().get(orderListTable.getSelectedRow()).getOrderList();
        for (int i = 0; i < orderlist.size(); i++) {
            model.addRow(new Object[]{
                orderlist.get(i).getItem(),
                orderlist.get(i).getPrice(),
                orderlist.get(i).getQuantity(),
                selectedDirs.getCustomerDetails().getUsername(),
                selectedDirs.getRestaurant().getName()
            });
        }

    }//GEN-LAST:event_orderListTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbutton;
    private javax.swing.JButton acceptBtn;
    private javax.swing.JComboBox<String> assignCombo;
    private javax.swing.JLabel assignLabel;
    private javax.swing.JButton finishBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable orderListTable;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton rejectBtn;
    // End of variables declaration//GEN-END:variables
}
